{"version":3,"sources":["components/Stories/Stories.module.css","components/Story/Story.module.css","components/Preloader/Preloader.module.css","components/Story/SubComment/SubComment.module.css","assets/loader.svg","components/Preloader/Preloader.jsx","components/Stories/Stories.jsx","redux/reducers/storiesReducer.js","components/Stories/StoriesContainer.jsx","components/Story/SubComment/SubComment.jsx","components/Story/Story.jsx","components/Story/StoryContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","Preloader","className","styles","loader","src","alt","Stories","props","isFetching","autors","buttonWrapper","onClick","reload","onToggleNewsTypeClick","state","newsType","storiesData","map","el","to","id","li","title","score","by","unixDate","time","Date","toLocaleString","SET_STORY","SET_STORIES","SET_COMMENTS","TOGGLE_IS_FETCHING","TOGGLE_NEWS_TYPE","initialState","storyData","commentsData","subCommentsData","toggleIsFetchingAC","type","storiesReducer","action","story","stories","parentType","oldIds","fltSubComments","comments","forEach","deleted","includes","push","sort","a","b","fltComments","StoriesContainer","getNewStories","blockIsFetching","newsTypeBool","toggleIsFetching","url","fetch","response","ok","Error","text","json","promises","slice","then","Promise","all","result","setStories","console","error","toggleNewsType","_tick","this","timer","setInterval","clearInterval","React","Component","connect","storiesPage","dispatch","setStoriesAC","SubComment","SD","parent","e","stopPropagation","onCommentClick","subComment","dangerouslySetInnerHTML","__html","kids","length","Story","getDate","wrapper","href","rel","target","updateComments","rootComment","StoryContainer","getNewComments","undefined","setComments","getStory","setStory","location","pathname","setCommentsAC","setStoryAC","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6cbd0e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"autors\":\"Stories_autors__2lThZ\",\"li\":\"Stories_li__2FJFg\",\"buttonWrapper\":\"Stories_buttonWrapper__3UyA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootComment\":\"Story_rootComment__16V45\",\"wrapper\":\"Story_wrapper__8BoKb\",\"title\":\"Story_title__X3Hxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__1Ps0i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subComment\":\"SubComment_subComment__10mPb\"};","export default __webpack_public_path__ + \"static/media/loader.e88c5d6a.svg\";","import React from 'react'\r\nimport styles from './Preloader.module.css'\r\nimport loader from './../../assets/loader.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={styles.loader}>\r\n            <img src={loader} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from 'react'\r\nimport styles from './Stories.module.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nconst Stories = (props) => {\r\n    const getDate = (unixDate) => {\r\n        const dateObject = new Date(unixDate * 1000)\r\n        return dateObject.toLocaleString()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.isFetching ? <Preloader /> :\r\n                <div className={styles.autors}>\r\n                    <div className={styles.buttonWrapper}>\r\n                        <button onClick={() => {props.reload()}}>Reload</button>\r\n                        <button onClick={() => {props.onToggleNewsTypeClick(!props.state.newsType)}}>{props.state.newsType ? 'Get top stories' : 'Get new stories'}</button>\r\n                    </div>\r\n                    <ul>{\r\n                        props.state.storiesData.map(el => (\r\n                            <Link key={el.id} to={`/${el.id}`}>\r\n                                <li className={styles.li} >\r\n                                    <div>{el.title}</div>\r\n                                    <div>Rate: {el.score}</div>\r\n                                    <div>By: {el.by}</div>\r\n                                    <div>{getDate(el.time)}</div>\r\n                                </li>\r\n                            </Link>\r\n                        ))}\r\n                    </ul>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Stories","const SET_STORY = \"SET_STORY\"\r\nconst SET_STORIES = \"SET_STORIES\"\r\nconst SET_COMMENTS = \"SET_COMMENTS\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst TOGGLE_NEWS_TYPE = \"TOGGLE_NEWS_TYPE\"\r\n\r\nconst initialState = {\r\n    storyData: {},\r\n    storiesData: [],\r\n    commentsData: [],\r\n    subCommentsData: [],\r\n    isFetching: false,\r\n    newsType: true,\r\n}\r\n\r\nconst storiesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_STORY:\r\n            return { ...state, storyData: { ...action.story } }\r\n        case SET_STORIES:\r\n            return { ...state, commentsData: [], storiesData: [...action.stories] }\r\n        case SET_COMMENTS:\r\n            if (action.parentType === 'comment') {\r\n                const oldIds = state.subCommentsData.map(el => (el.id))\r\n                const fltSubComments = []\r\n                action.comments.forEach(el => {\r\n                    if (!el.deleted) {\r\n                        if (!oldIds.includes(el.id)) {\r\n                            fltSubComments.push({ ...el })\r\n                        }\r\n                    }\r\n                })\r\n                fltSubComments.sort((a, b) => {\r\n                    if (a.time > b.time) {\r\n                        return 1;\r\n                    }\r\n                    if (a.time < b.time) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                return { ...state, subCommentsData: [...state.subCommentsData, ...fltSubComments] }\r\n            }\r\n            else {\r\n                const fltComments = []\r\n                action.comments.forEach(el => {\r\n                    if (!el.deleted) {\r\n                        fltComments.push({ ...el })\r\n                    }\r\n                })\r\n                fltComments.sort((a, b) => {\r\n                    if (a.time < b.time) {\r\n                        return 1;\r\n                    }\r\n                    if (a.time > b.time) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                return { ...state, commentsData: [...fltComments] }\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_NEWS_TYPE:\r\n            return { ...state, newsType: !state.newsType }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setStoryAC = (story) => {\r\n    return {\r\n        type: SET_STORY,\r\n        story: story,\r\n    }\r\n}\r\n\r\nexport const setStoriesAC = (stories) => {\r\n    return {\r\n        type: SET_STORIES,\r\n        stories: stories,\r\n    }\r\n}\r\n\r\nexport const setCommentsAC = (comments, parentType) => {\r\n    return {\r\n        type: SET_COMMENTS,\r\n        comments: comments,\r\n        parentType: parentType\r\n    }\r\n}\r\n\r\nexport const toggleIsFetchingAC = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\n\r\nexport const toggleNewsTypeAC = () => {\r\n    return {\r\n        type: TOGGLE_NEWS_TYPE\r\n    }\r\n}\r\n\r\n\r\nexport default storiesReducer","import { connect } from 'react-redux';\r\nimport Stories from './Stories';\r\nimport { toggleIsFetchingAC, toggleNewsTypeAC, setStoriesAC } from '../../redux/reducers/storiesReducer'\r\nimport React from 'react'\r\n\r\n\r\nclass StoriesContainer extends React.Component {\r\n  getNewStories = async (blockIsFetching = false, newsTypeBool=this.props.state.newsType) => {\r\n    if (!blockIsFetching) {\r\n      this.props.toggleIsFetching(true)\r\n    }\r\n    let newsType\r\n    if (newsTypeBool) {\r\n      newsType = \"new\"\r\n    }\r\n    else {\r\n      newsType = \"top\"\r\n    }\r\n    const url = `https://hacker-news.firebaseio.com/v0/${newsType}stories.json`;\r\n    try {\r\n      const response = await fetch(url);\r\n      if (response.ok === false) {\r\n        throw new Error(\"Response Error:\" + response.text);\r\n      }\r\n      const json = await response.json();\r\n      const promises = json\r\n        .slice(0, 100)\r\n        .map(id =>\r\n          fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`).then(\r\n            response => response.json()\r\n          )\r\n        );\r\n      const result = await Promise.all(promises);\r\n      this.props.setStories(result);\r\n      this.props.toggleIsFetching(false)\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  onToggleNewsTypeClick = (newsTypeBool) => {\r\n    this.props.toggleNewsType()\r\n    this.getNewStories(false, newsTypeBool)\r\n  }\r\n\r\n  _tick = () => {\r\n    this.getNewStories(true)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNewStories();\r\n    this.timer = setInterval(this._tick, 60000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Stories onToggleNewsTypeClick={this.onToggleNewsTypeClick} reload={this.getNewStories} isFetching={this.props.isFetching} state={this.props.state} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.storiesPage,\r\n    isFetching: state.storiesPage.isFetching\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setStories: (stories) => { dispatch(setStoriesAC(stories)) },\r\n    toggleIsFetching: (isFetching) => { dispatch(toggleIsFetchingAC(isFetching)) },\r\n    toggleNewsType: () => { dispatch(toggleNewsTypeAC()) }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StoriesContainer);\r\n\r\n","import React from 'react'\r\nimport styles from './SubComment.module.css'\r\n\r\nconst SubComment = (props) => {\r\n    return (\r\n        <div>\r\n            {props.SD.map(el => {\r\n                if (el.parent === props.id) {\r\n                    return (\r\n                        <ul key={el.id} onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            props.onCommentClick(el.id, el.type)\r\n                        }} className={styles.subComment}>\r\n                            <li dangerouslySetInnerHTML={{ __html: el.text }}></li>\r\n                            <li>By:{el.by}</li>\r\n                            {el.kids ? <li>Replies: {el.kids.length}</li> : null}\r\n                            {el.kids ? <SubComment onCommentClick={props.onCommentClick} SD={props.SD} id={el.id} state={el} /> : null}\r\n                        </ul>)\r\n                }\r\n                else {\r\n                    return null\r\n                }\r\n            })}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SubComment","import React from 'react'\r\nimport styles from './Story.module.css'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport SubComment from './SubComment/SubComment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Story = (props) => {\r\n    const getDate = (unixDate) => {\r\n        const dateObject = new Date(unixDate * 1000)\r\n        return dateObject.toLocaleString()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div>\r\n                <ul>\r\n                    <li className={styles.title}>{props.state.storyData.title}</li>\r\n                    <li><a href={props.state.storyData.url} rel=\"noreferrer\" target='_blank'>{props.state.storyData.url}</a></li>\r\n                    <li>{getDate(props.state.storyData.time)}</li>\r\n                    <li>By: {props.state.storyData.by}</li>\r\n                    {props.state.storyData.kids ? <li>Comments:  {props.state.commentsData.length}</li> : null}\r\n                    <li><button onClick={() => {props.updateComments(props.state.storyData.id)}}>Update comments</button></li>\r\n                    <li><Link to='/'><button>Back</button></Link></li>\r\n                </ul>\r\n                {props.isFetching ? <Preloader /> :\r\n\r\n                    <ul>{\r\n                        props.state.commentsData.map((el) => (\r\n                            <li onClick={() => { props.updateComments(el.id, el.type) }} className={styles.rootComment} key={el.id}>\r\n                                <div dangerouslySetInnerHTML={{ __html: el.text }}></div>\r\n                                <div>By: {el.by}</div>\r\n                                <div>{getDate(el.time)}</div>\r\n                                {el.kids ? <div>Replies: {el.kids.length}</div> : null}\r\n                                {el.kids ? <SubComment onCommentClick={props.updateComments} SD={props.state.subCommentsData} id={el.id} state={el} /> : null} \r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Story","import { connect } from 'react-redux'\r\nimport Story from './Story'\r\nimport React from 'react'\r\nimport { toggleIsFetchingAC, setStoryAC, setCommentsAC } from '../../redux/reducers/storiesReducer'\r\n\r\nclass StoryContainer extends React.Component {\r\n\r\n  getNewComments = async (id, parentType) => {\r\n    if (!parentType) {\r\n      this.props.toggleIsFetching(true)\r\n      parentType = 'story'\r\n    }\r\n    const url = `https://hacker-news.firebaseio.com/v0/item/${id}.json`;\r\n    try {\r\n      const response = await fetch(url)\r\n      if (response.ok === false) {\r\n        throw new Error(\"Response Error:\" + response.text)\r\n      }\r\n      const json = await response.json()\r\n      if (json.kids !== undefined) {\r\n        const promises = json.kids\r\n          .map(id =>\r\n            fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`).then(\r\n              response => response.json()\r\n            )\r\n          )\r\n        const result = await Promise.all(promises)\r\n        this.props.setComments(result, parentType)\r\n      }\r\n      this.props.toggleIsFetching(false)\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  getStory = async (id) => {\r\n    const url = `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`;\r\n    try {\r\n      const response = await fetch(url)\r\n      if (response.ok === false) {\r\n        throw new Error(\"Response Error:\" + response.text)\r\n      }\r\n      const json = await response.json()\r\n      this.props.setStory(json)\r\n      this.props.toggleIsFetching(false)\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  _tick = (id) => {\r\n    this.getNewComments(id, true)\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.location.pathname.slice(1)\r\n    this.getNewComments(id);\r\n    this.getStory(id)\r\n    this.timer = setInterval(() => { this._tick(this.props.state.storyData.id) }, 60000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Story isFetching={this.props.isFetching} state={this.props.state} updateComments={this.getNewComments} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.storiesPage,\r\n    isFetching: state.storiesPage.isFetching,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setComments: (comments, parentType) => { dispatch(setCommentsAC(comments, parentType)) },\r\n    setStory: (story) => { dispatch(setStoryAC(story)) },\r\n    toggleIsFetching: (isFetching) => { dispatch(toggleIsFetchingAC(isFetching)) }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StoryContainer);\r\n","import './App.css';\nimport StoriesContainer from './components/Stories/StoriesContainer';\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport StoryContainer from './components/Story/StoryContainer';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"header\"><p>Hacker News</p></div>\n      <div className=\"app-wrapper\">\n        <div className=\"content\">\n          <div>\n            <Route exact path=\"/\">\n              <StoriesContainer />\n            </Route>\n          </div>\n          <Route exact path=\"/:id\" component={StoryContainer} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux'\r\nimport storiesReducer from \"./reducers/storiesReducer\"\r\n\r\nlet reducers = combineReducers({\r\n    storiesPage: storiesReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}